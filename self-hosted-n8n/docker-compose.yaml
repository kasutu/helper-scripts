# docker-compose.yml
# Official n8n Docker Compose + Ollama for 2GB RAM setup
# Based on n8n official docker-compose with Ollama integration

services:
  postgres:
    container_name: n8n-postgres
    image: postgres:16
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - n8n-network

  n8n:
    container_name: n8n-app
    image: n8nio/n8n:latest
    restart: unless-stopped
    environment:
      # Required Database Configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}

      # Required n8n Configuration
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - WEBHOOK_URL=${WEBHOOK_URL}

      # Required Security
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}

      # Timezone
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}

    ports:
      - "${N8N_PORT}:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    networks:
      - n8n-network

  ollama:
    container_name: n8n-ollama
    image: ollama/ollama:latest
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
    ports:
      - "${OLLAMA_PORT}:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - n8n-network

  # Optional: Local Whisper API (if community node doesn't work)
  whisper:
    container_name: n8n-whisper
    image: onerahmet/openai-whisper-asr-webservice:latest
    restart: unless-stopped
    environment:
      - ASR_MODEL=base
      - ASR_ENGINE=faster_whisper
    ports:
      - "${WHISPER_PORT:-9000}:9000"
    volumes:
      - whisper_data:/app/models
    networks:
      - n8n-network

volumes:
  postgres_data:
    external: true
  n8n_data:
  ollama_data:
  whisper_data:

networks:
  n8n-network:
    driver: bridge
